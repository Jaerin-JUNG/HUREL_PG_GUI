<Window x:Class="HUREL_PG_GUI.Views.Window_SpotScanningView_PostProcessing"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:viewmodel="clr-namespace:HUREL_PG_GUI.ViewModels"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        
        xmlns:sf="http://schemas.syncfusion.com/wpf"
        xmlns:syncfusionskin ="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
              syncfusionskin:SfSkinManager.Theme="{syncfusionskin:SkinManagerExtension ThemeName=Metro}"
        
        xmlns:local="clr-namespace:HUREL_PG_GUI"
        mc:Ignorable="d"

        Title="Post Processing (Proteus 235, IBA)" Height="900" Width="1600"
        WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <viewmodel:VM_SpotScanning_PostProcessing/>
    </Window.DataContext>

    <Grid Background="#FFEAEAEA">
        <Grid.RowDefinitions>
            <RowDefinition Height="130"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Background="White" CornerRadius="5" Margin="10, 10, 10, 5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="360"/>  <!--0: Title-->
                    <ColumnDefinition Width="auto"/> <!--1: Grid Splitter-->
                    <ColumnDefinition Width="450"/>  <!--2: Data Select Panel-->
                    <ColumnDefinition Width="auto"/> <!--3: Grid Splitter-->
                    <ColumnDefinition Width="*"/>    <!--4: Status Information-->
                    <ColumnDefinition Width="auto"/> <!--5: Report Button-->
                    <ColumnDefinition Width="130"/>  <!--5: Report Button-->
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Height="120" Orientation="Vertical" Margin="10" VerticalAlignment="Stretch">
                    <TextBlock Text="Post-processing Mode" FontSize="24" FontWeight="Bold" Width="270" Margin="10, 0, 0, 0"
                            VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="black"/>
                    <TextBlock Text=" " FontSize="6"/>
                    <TextBlock Text="Proteus 235, Ion Beam Application" FontSize="17" FontWeight="Light" Margin="10, 0, 0, 0"
                            VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="Black"/>
                    <Grid Margin="10, 10, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <RadioButton Grid.Column="0" GroupName="DataSelectMode" x:Name="RadioBtn_PatientData" IsChecked="True"
                                     Content="Retrieve data for patient  " FontSize="12" Command="{Binding Select_PatientDataCommand}"/>

                        <RadioButton Grid.Column="1" GroupName="DataSelectMode" x:Name="RadioBtn_SelectData" IsChecked="False"
                                     Content="Select data individually" FontSize="12" Command="{Binding Select_IndividualDataCommand}"/>

                    </Grid>
                </StackPanel>

                <GridSplitter Grid.Column="1" Style="{StaticResource GridSplitterStyle_default}"/>

                <Grid Grid.Column="2" >
                    <!--Data_Patient-->
                    <Grid Visibility="{Binding Path=Data_SelectType, Converter={StaticResource Conv_EnumToStackPanelVis}, ConverterParameter=Data_Patient}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>     
                        
                        <Button x:Name="Btn_DICOMload" Grid.Column="0" Style="{StaticResource Button_RealTime_DICOM}" Command="{Binding LoadPatientDatasCommand}">
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <Image Source="/Icons/symbol_patient.png" Width="70" Height="90" Margin="0"/>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Patient ID" Style="{StaticResource TBlock_DICOM_1}"/>
                                    <Border Grid.Row="0" Grid.Column="1" BorderBrush="#FF00457E" BorderThickness="1" Margin="5, 12, 5, 12" Width="100">
                                        <TextBlock Text="{Binding PatientID}" Style="{StaticResource TBlock_DICOM_2}" Margin="5, 0, 0, 0"/>
                                    </Border>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Patient Name" Style="{StaticResource TBlock_DICOM_1}"/>
                                    <Border Grid.Row="1" Grid.Column="1" BorderBrush="#FF00457E" BorderThickness="1" Margin="5, 12, 5, 12" Width="100">
                                        <TextBlock Text="{Binding PatientName}" Style="{StaticResource TBlock_DICOM_2}" Margin="5, 0, 0, 0"/>
                                    </Border>
                                </Grid>
                            </StackPanel>
                        </Button>

                        <GridSplitter Grid.Column="1" Style="{StaticResource GridSplitterStyle1}"/>

                        <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Stretch" Margin="0, 10, 0, 10">
                            <Border Style="{StaticResource Border_PostProcessing}">
                                <TextBlock Text="{Binding DICOM_PrescribedDose}" Margin="10, 0, 10, 0"  Style="{StaticResource TBlock_PostProcessing}"/>
                            </Border>
                            
                            <Border Style="{StaticResource Border_PostProcessing}">
                                <TextBlock Text="{Binding DICOM_TotalFraction}" Margin="10, 0, 10, 0"  Style="{StaticResource TBlock_PostProcessing}"/>
                            </Border>
                        </StackPanel>
                    </Grid>
                    <!--Data_Patient(END)-->

                    <!--Data_Individual-->
                    <Grid Visibility="{Binding Path=Data_SelectType, Converter={StaticResource Conv_EnumToStackPanelVis}, ConverterParameter=Data_Individual}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!--Spot Data-->
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Spot Data" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="0" Grid.Column="1" Style="{StaticResource Border_PostProcessing}">
                            <TextBlock Text="{Binding LoadedFileName_Plan}" Margin="5, 0, 0, 0" />
                        </Border>
                        <Button Grid.Row="0" Grid.Column="2" Command="{Binding PlanFileLoadCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource Button_PostProcessing}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlanFileLoaded_PostProcessing}" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="DarkBlue"/>
                                            <Setter Property="Content" Value="Loaded"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPlanFileLoaded_PostProcessing}" Value="False">
                                            <Setter Property="Background" Value="#FF00457E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Content" Value="Load"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--Spot Data-->
                        
                        <!--Log Data-->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Log Data" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource Border_PostProcessing}">
                            <TextBlock Text="{Binding LoadedFileName_Log}" Margin="5, 0, 0, 0" />
                        </Border>
                        <Button Grid.Row="1" Grid.Column="2" Command="{Binding LogFilesLoadCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource Button_PostProcessing}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLogFileLoaded_PostProcessing}" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="DarkBlue"/>
                                            <Setter Property="Content" Value="Loaded"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLogFileLoaded_PostProcessing}" Value="False">
                                            <Setter Property="Background" Value="#FF00457E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Content" Value="Load"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--Log Data(END)-->
                        
                        <!--PG Data-->
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="PG Data" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="2" Grid.Column="1" Style="{StaticResource Border_PostProcessing}">
                            <TextBlock Text="{Binding LoadedFileName_PG}" Margin="5, 0, 0, 0"/>
                        </Border>
                        <Button Grid.Row="2" Grid.Column="2" Command="{Binding PGDataLoadCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource Button_PostProcessing}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPGDataLoaded_PostProcessing}" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="DarkBlue"/>
                                            <Setter Property="Content" Value="Loaded"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPGDataLoaded_PostProcessing}" Value="False">
                                            <Setter Property="Background" Value="#FF00457E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Content" Value="Load"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--PG Data(END)-->
                        
                        <!--DICOM-->
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="DICOM" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="3" Grid.Column="1" Style="{StaticResource Border_PostProcessing}">
                            <!--<TextBlock Text="{Binding LoadedFileName_DICOM}" Margin="5, 0, 0, 0"/>-->
                        </Border>
                        <Button Grid.Row="3" Grid.Column="2" Command="{Binding DICOMFileLoadCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource Button_PostProcessing}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDICOMFileLoaded_PostProcessing}" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="DarkBlue"/>
                                            <Setter Property="Content" Value="Loaded"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsDICOMFileLoaded_PostProcessing}" Value="False">
                                            <Setter Property="Background" Value="#FF00457E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Content" Value="Load"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--DICOM(END)-->
                    </Grid>
                </Grid>
                <!--Data_Individual(END)-->

                <GridSplitter Grid.Column="3" Style="{StaticResource GridSplitterStyle_default}"/>

                <!--Column#4: Status Panel-->
                <Grid Grid.Column="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="2.5*"/>
                            <ColumnDefinition Width="2.5*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Measured Date" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="0" Grid.Column="1" Style="{StaticResource Border_PostProcessing}">
                            <TextBlock Text="{Binding MeasuredDate}" Style="{StaticResource TBlock_PostProcessing2}"/>
                        </Border>

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Camera Position" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource Border_PostProcessing}">
                            <TextBlock Text="{Binding CameraPosition}" Style="{StaticResource TBlock_PostProcessing2}"/>
                        </Border>

                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Gantry Angle" Style="{StaticResource TBlock_PostProcessing1}"/>
                        <Border Grid.Row="0" Grid.Column="3" Style="{StaticResource Border_PostProcessing}">
                            <TextBlock Text="{Binding GantryAngle}" Style="{StaticResource TBlock_PostProcessing2}"/>
                        </Border>


                        <Button Grid.Row="1" Grid.Column="2" Command="{Binding TestCommand}" Margin="5" Content="TestBtn1(Activated)" FontWeight="Bold"/>
                        <!--<Button Grid.Row="1" Grid.Column="3" Command="{Binding }" Margin="5" Content="TestBtn2(UnActivated)"/>-->

                    </Grid>

                    <GridSplitter Grid.Row="1" Height="0.5" Background="Gray" HorizontalAlignment="Stretch" Margin="5"/>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="130"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Program Status: " Style="{StaticResource TBlock_PostProcessing1}"/>
                        <!--<TextBlock Grid.Column="1" Text="Beam Range Map Generating... " Style="{StaticResource TBlock_PostProcessing2}"/>-->
                        <TextBlock Grid.Column="1" Text="Idle " Style="{StaticResource TBlock_PostProcessing2}"/>
                        <Button Grid.Column="2" Command="{Binding ViewClearCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource Button_PostProcessing2}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding }" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding }" Value="False">
                                            <Setter Property="Background" Value="#FF00457E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Clear" Foreground="White" FontWeight="Bold" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Grid.Column="3" Command="{Binding PostProcessingAnalysisStartCommand}" IsEnabled="{Binding IsReadyPostProcessingAnalysis}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource Button_PostProcessing2}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPostProcessingAnalysising}" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="Content" Value="Analyzing..."/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsPostProcessingAnalysising}" Value="False">
                                            <Setter Property="Background" Value="#FF00457E"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Content" Value="Analysis Start"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
                <!--Column #4: Stauts Panel(END)-->

                <GridSplitter Grid.Column="5" Style="{StaticResource GridSplitterStyle_default}" Margin="10, 10, 0, 10"/>
                
                <!--Column #6: Report Button-->
                <Button Grid.Column="6" x:Name="Btn_Report" Style="{StaticResource Button_RealTime}" Command="{Binding }">
                    <StackPanel>
                        <Image Source="/Icons/symbol_report.png" Width="70" Height="60" Margin="0"/>
                        <TextBlock Text=" " FontSize="4"/>
                        <TextBlock Text="Report" Style="{StaticResource TBlock_Btn_RealTime}" FontSize="16"/>
                    </StackPanel>
                </Button>
                <!--Column #6: Report Button(END)-->               
                
            </Grid>   
        </Border>

        <sf:TabControlExt Grid.Row="1"
                          FontWeight="Bold" 
                          Background="White" 
                          Margin="5, 0, 0, 5" 
                          BorderBrush="#FFEAEAEA"
                          CloseButtonType="Hide" 
                          TabStripPlacement="Top"                                   
                          TabListContextMenuOptions="None"                                  
                          TabItemSelectedBackground="#FF00457E" 
                          TabItemHoverBorderBrush="#FF00457E" 
                          TabItemLayout="SingleLineStar" 
                          IsCustomTabItemContextMenuEnabled="False" 
                          EnableLabelEdit="False"                         
                          sf:SfSkinManager.Theme="{syncfusionskin:SkinManagerExtension ThemeName=Metro}">

            <sf:TabItemExt Header="Intra-fractional Range Analysis" Background="White" BorderBrush="#FFEAEAEA" FontSize="15">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="670"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Margin="0, 5, 0, 0">
                        <Grid Visibility="{Binding Path=Data_SelectType, Converter={StaticResource Conv_EnumToStackPanelVis}, ConverterParameter=Data_Patient}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Style="{StaticResource TBlock_Post_Title1}" Text="Selected Fraction: "/>
                            <ComboBox Grid.Column="1" ItemsSource="{Binding }" Margin="10, 5, 10, 0"/>
                            <TextBlock Grid.Column="2" Style="{StaticResource TBlock_Post_Title1}" Text="/ "/>
                            <TextBlock Grid.Column="3" Style="{StaticResource TBlock_Post_Title1}" Text="20" HorizontalAlignment="Left"/>

                            <TextBlock Grid.Column="4" Style="{StaticResource TBlock_Post_Title1}" Text="Selected Field: "/>
                            <ComboBox Grid.Column="5" ItemsSource="{Binding }" Margin="10, 5, 10, 0"/>
                        </Grid>

                        <StackPanel Visibility="{Binding Path=Data_SelectType, Converter={StaticResource Conv_EnumToStackPanelVis}, ConverterParameter=Data_Individual}" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource TBlock_Post_Title1}" Margin="10, 2, 0, 0" Text="Service Mode"/>
                            <TextBlock Style="{StaticResource TBlock_Post_Title1}" Margin="10, 2, 10, 0" FontWeight="Medium" Text="(Data is selected individually)"/>
                        </StackPanel>

                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="640"/>  <!--Spot Map-->
                            <ColumnDefinition Width="auto"/> <!--Grid Splitter-->
                            <ColumnDefinition Width="640"/>  <!--Beam Range Map-->
                            <ColumnDefinition Width="auto"/> <!--Grid Splitter-->
                            <ColumnDefinition Width="*"/>    <!--Result-->
                        </Grid.ColumnDefinitions>                        

                        <!--1-0. Spot Map-->
                        <StackPanel Grid.Column="0" Orientation="Vertical">
                            <TextBlock Grid.Column="0" Text="Spot Map" Style="{StaticResource TBlock_Post_Title}"/>
                            <StackPanel Orientation="Horizontal" Margin="10, 0, 10, 10">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="550"/>
                                        <RowDefinition Height="50"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="550"/>
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Spot Map Map-->
                                        <sf:SfChart Grid.Column="0" AreaBackground="WhiteSmoke">
                                            <sf:SfChart.PrimaryAxis>
                                                <sf:NumericalAxis HeaderTemplate="{StaticResource sf_Xaxis}" Minimum="-80" Maximum="80"/>
                                            </sf:SfChart.PrimaryAxis>
                                            <sf:SfChart.SecondaryAxis>
                                                <sf:NumericalAxis HeaderTemplate="{StaticResource sf_Yaxis}" Minimum="-80" Maximum="80"/>
                                            </sf:SfChart.SecondaryAxis>

                                            <sf:BubbleSeries ItemsSource="{Binding VM_SpotMap}"
                                                             XBindingPath="X" YBindingPath="Y" SegmentColorPath="Color" Size="MU"
                                                             ShowZeroBubbles="False" MinimumRadius="5" MaximumRadius="15"/>

                                            <sf:SfChart.Behaviors>
                                                <sf:ChartZoomPanBehavior EnableMouseWheelZooming="true"/>
                                            </sf:SfChart.Behaviors>
                                        </sf:SfChart>

                                        <!--Color Bar-->
                                        <sf:SfHeatMapLegend Grid.Column="1" Margin="5, 5, 0, 45" Width="40"
                                                            ColorMappingCollection="{StaticResource ColorBar_BeamRangeMap}"
                                                            FlowDirection="LeftToRight" Orientation="Vertical"/>

                                        <!--Color Bar Explain-->
                                        <TextBlock Grid.Column="2" Margin="0, 0, 0, 100"
                                                   Text="Difference between planned range and measured range (mm)"
                                                   FontSize="14" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontWeight="Bold">
                                            <TextBlock.RenderTransform>
                                                <TransformGroup>
                                                    <RotateTransform Angle="270"/>
                                                </TransformGroup>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </Grid>                                    
                                    <!--Grid.row = 0(END)-->

                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="0" Margin="0, 15, 0, 0">
                                            <sf:SfRangeSlider Margin="20, 0, 10, 0" Width="510" Padding="0, -7, 0, -7"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                                          Minimum="1" Maximum="{Binding Plan_TotalLayer}"
                                                          
                                                          Value="{Binding SpotMap_SelectedLayer, Mode=TwoWay}"
                                                          
                                                          ActiveTrackStyle="{StaticResource myActiveTrackStyle_SpotMap}"
                                                          InactiveTrackStyle="{StaticResource myInActiveTrackStyle}"
                                                          ThumbStyle="{StaticResource myThumbStyle}"
                                                                                            
                                                          ShowValueLabels="True"
                                                          ValuePlacement="BottomRight"                                                          
                                                          TickFrequency="1"                                                          
                                                          
                                                          ActiveTickStroke="White"
                                                          TickStroke="Gray"
                                                          TickStrokeThickness="4"
                                                          TickLength="8"
                                                          
                                                          MinorTickFrequency="1"
                                                          MinorTickLength="2"
                                                          MinorTickStroke="Black"/>
                                        </StackPanel>

                                        <Button Grid.Column="1" Content="Show" Style="{StaticResource Button_PostProcessing2}" Command="{Binding DrawSpotMapCommand}"
                                                Width="70" Height="40" HorizontalAlignment="Left"/>
                                    </Grid>
                                    
                                </Grid>
                            </StackPanel>
                        </StackPanel>

                        <GridSplitter Grid.Column="1" Margin="10, 20, 10, 40" Width="0.5" Background="Gray"/>

                        <!--1-2. Beam Range Map-->
                        <StackPanel Grid.Column="2" Orientation="Vertical">
                            <TextBlock Grid.Column="0" Text="Beam Range Map" Style="{StaticResource TBlock_Post_Title}"/>
                            <StackPanel Orientation="Horizontal" Margin="10, 0, 10, 10">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="550"/>
                                        <RowDefinition Height="50"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="550"/>
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Beam Range Map-->
                                        <sf:SfChart Grid.Column="0" AreaBackground="WhiteSmoke">
                                            <sf:SfChart.PrimaryAxis>
                                                <sf:NumericalAxis HeaderTemplate="{StaticResource sf_Xaxis}" Minimum="-80" Maximum="80"/>
                                            </sf:SfChart.PrimaryAxis>
                                            <sf:SfChart.SecondaryAxis>
                                                <sf:NumericalAxis HeaderTemplate="{StaticResource sf_Yaxis}" Minimum="-80" Maximum="80"/>
                                            </sf:SfChart.SecondaryAxis>

                                            <sf:FastScatterBitmapSeries ItemsSource="{Binding VM_BeamRangeMap}"
                                                                    XBindingPath="X" YBindingPath="Y" SegmentColorPath="Color" ScatterHeight="20" ScatterWidth="20"
                                                                    ShapeType="Square"/>

                                            <sf:SfChart.Behaviors>
                                                <sf:ChartZoomPanBehavior EnableMouseWheelZooming="true"/>
                                            </sf:SfChart.Behaviors>
                                        </sf:SfChart>

                                        <!--Color Bar-->
                                        <sf:SfHeatMapLegend Grid.Column="1" Margin="5, 5, 0, 45" Width="40"
                                                            ColorMappingCollection="{StaticResource ColorBar_BeamRangeMap}"
                                                            FlowDirection="LeftToRight" Orientation="Vertical"/>

                                        <!--Color Bar Explain-->
                                        <TextBlock Grid.Column="2" Margin="0, 0, 0, 100"
                                                   Text="Difference between planned range and measured range (mm)"
                                                   FontSize="14" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontWeight="Bold">
                                            <TextBlock.RenderTransform>
                                                <TransformGroup>
                                                    <RotateTransform Angle="270"/>
                                                </TransformGroup>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </Grid>
                                    <!--Grid.row = 0(END)-->

                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="0" Margin="0, 15, 0, 0">
                                            <sf:SfRangeSlider Margin="20, 0, 10, 0" Width="510" Padding="0, -7, 0, -7"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                                          Minimum="1" Maximum="{Binding Plan_TotalLayer}"
                                                          
                                                          RangeStart="{Binding BeamRangeMap_Selected_StartLayer, Mode=TwoWay}" 
                                                          RangeEnd="{Binding BeamRangeMap_Selected_EndLayer, Mode=TwoWay}"
                                                          
                                                          ActiveTrackStyle="{StaticResource myActiveTrackStyle}"
                                                          InactiveTrackStyle="{StaticResource myInActiveTrackStyle}"
                                                          ThumbStyle="{StaticResource myThumbStyle}"
                                                              
                                                          SnapsTo="StepValues"                                                          
                                                          StepFrequency="1"
                                                              
                                                          MoveToPoint="MoveToTapPosition"
                                                              
                                                          ShowRange="True"
                                                          ShowValueLabels="True"
                                                          ValuePlacement="BottomRight"                                                          
                                                          TickFrequency="1"                                                          
                                                          
                                                          ActiveTickStroke="White"
                                                          TickStroke="Gray"
                                                          TickStrokeThickness="4"
                                                          TickLength="8" 
                                                          
                                                          MinorTickFrequency="1"
                                                          MinorTickLength="2"
                                                          MinorTickStroke="Black" >
                                                
                                                <!--<Behaviors:Interaction.Triggers>
                                                    <Behaviors:EventTrigger EventName="Test">
                                                        <Behaviors:InvokeCommandAction Command="{Binding RangeChanged}"/>
                                                    </Behaviors:EventTrigger>
                                                </Behaviors:Interaction.Triggers>-->
                                            </sf:SfRangeSlider>
                                        </StackPanel>

                                        <Button Grid.Column="1" Content="Show" Style="{StaticResource Button_PostProcessing2}" Command="{Binding DrawBeamRageMapCommand}"
                                                Width="70" Height="40" HorizontalAlignment="Left"/>
                                        
                                    </Grid>
                                </Grid>
                            </StackPanel>
                        </StackPanel>

                        <GridSplitter Grid.Column="3" Margin="10, 20, 10, 40" Width="0.5" Background="Gray"/>

                        <Grid Grid.Column="4">
                            <TextBlock Grid.Column="0" Text="Result" Style="{StaticResource TBlock_Post_Title}"/>
                        </Grid>
                        
                    </Grid>
                    
                </Grid>
            </sf:TabItemExt>

            <sf:TabItemExt Header="Intra-fractional Dose Reconstruction" Background="White" BorderBrush="#FFEAEAEA" FontSize="15">
            </sf:TabItemExt>

            <sf:TabItemExt Header="Inter-fractional Range Analysis" Background="White" BorderBrush="#FFEAEAEA" FontSize="15">
            </sf:TabItemExt>

            <sf:TabItemExt Header="Inter-fractional Dose Reconstruction" Background="White" BorderBrush="#FFEAEAEA" FontSize="15">
            </sf:TabItemExt>

            <sf:TabItemExt Header="Setting" Background="White" BorderBrush="#FFEAEAEA" FontSize="15" Width="180">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Patient Information"/>
                    <TextBlock Text="General Information"/>

                    <TextBlock Text="DAQ setting Information"/>
                    <TextBlock Text="Energy Calibration Information"/>


                    <TextBlock Text="Positioning System Information"/>
                    <TextBlock Text="Loaded Data Information"/>
                </StackPanel>
            </sf:TabItemExt>


        </sf:TabControlExt>

    </Grid>
</Window>
